
https://lczero.org/dev/wiki/testing-guide/

Debugging
    valgrind --leak-check=yes -v ./Vengeance

ucinewgame
setoption name Hash value 120
setoption name Threads value 4

Stuff blocking release
    - TODO logic 

Priority
    - Node explosion control
    - Better endgame detection for null move etc

TODO
    - Rewrite logic for copy/paste code
    - Add tempo for eval and tuning
    - Check zobrist hashing logic, hash table implementation
    - Check square flipping for sides in evaluation
    
Needs investigation
    - reduce search explosion for higher depths
    - delay reporting to the uci during initial seconds 
    - quiescense explosion

DONE (under observation)
    - Add 50 moves rule
    
Bugs
    - 8/6P1/7K/8/6kp/8/2b5/8 b - - 0 90 (Returns zero for a winning position)

    4rr1k/1pp5/8/p7/P2P2N1/3n4/1P1B1N2/R4K2 b - - 4 33 // very large scores
    r4r2/1pp3k1/3p2np/p3p2q/P2PP1Q1/2P1bN1B/1P1N2K1/R1B5 b - - 6 23 // returns large score
    1r6/Q1p2pkp/3b1qp1/3P4/3p4/3P1BP1/Pr2RPKP/R7 b - - 3 22 // alternating pv and scores (about 50 centipawns diff)
    5rk1/4P3/6p1/7p/ppQ1P3/q2r3P/PR4P1/K7 b - - 1 41 // horizon effect (is losing but returns normal results)
    6N1/7k/3p1N1p/p1P1r3/1p1b2KP/1P2p3/6n1/8 b - - 1 64 // horizon effect
    2rr2k1/2b2p1p/p5p1/4p1q1/1QNpP3/1P1P3P/1PP1KPP1/R3R3 b - - 0 27 //  Is losing, but returns normal results
    r2qkb1r/pp3ppp/2nppn2/2p5/2P1P3/1P3N2/P2PQPPP/RNB2RK1 w kq - 1 9 // current move report is lagging
    r2qkb1r/pp3ppp/2nppn2/2p5/2P1P3/1P3N2/P2PQPPP/RNB2RK1 w kq - 1 9 // Took very long to move
